<?xml version="1.0" ?>
<def-group>
  <!--ATTENTION: some OVAL entities defined below ALSO OCCUR in OVAL definitions
for other rules - a mechanism generating SCAP from these sources must ensure that
multiple definitions of the same entity are exactly the same.
When using 'localized' per-rule OVAL, as encouraged by the Scapolite format
it is probaly preferable to structure OVAL differently and work with shared OVAL files.
The OVAL presented here has been exported automatically but no such optimization
using shared OVAL files has been carried out.
Here is the list of identifies for OVAL entities that also occur in other rules:
 - 'oval:ssg-test_auditd_conf_log_group_not_root:tst:1'
- 'oval:ssg-object_auditd_conf_log_group_root:obj:1'
- 'oval:ssg-auditd_conf_log_group_not_root:def:1'  -->
  <definition class="compliance" id="oval:ssg-file_permissions_var_log_audit:def:1" version="2">
    <metadata>
      <title>Verify /var/log/audit Permissions</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 8</platform>
      </affected>
      <description>Checks for correct permissions for all log files in /var/log/audit.</description>
      <reference ref_id="CCE-80819-6" source="CCE"/>
      <reference ref_id="file_permissions_var_log_audit" source="ssg"/>
    </metadata>
    <criteria operator="OR">
      <criterion negate="true" test_ref="oval:ssg-test_file_permissions_var_log_audit:tst:1"/>
      <criteria comment="log_group in auditd.conf is not root" operator="AND">
        <extend_definition comment="log_group in auditd.conf is not root" definition_ref="oval:ssg-auditd_conf_log_group_not_root:def:1"/>
        <criterion negate="true" test_ref="oval:ssg-test_file_permissions_var_log_audit-non_root:tst:1"/>
      </criteria>
    </criteria>
  </definition>
  <unix:file_state id="oval:ssg-state_not_mode_0600:ste:1" operator="OR" version="1">
    <unix:suid datatype="boolean">true</unix:suid>
    <unix:sgid datatype="boolean">true</unix:sgid>
    <unix:sticky datatype="boolean">true</unix:sticky>
    <unix:uexec datatype="boolean">true</unix:uexec>
    <unix:gread datatype="boolean">true</unix:gread>
    <unix:gwrite datatype="boolean">true</unix:gwrite>
    <unix:gexec datatype="boolean">true</unix:gexec>
    <unix:oread datatype="boolean">true</unix:oread>
    <unix:owrite datatype="boolean">true</unix:owrite>
    <unix:oexec datatype="boolean">true</unix:oexec>
  </unix:file_state>
  <unix:file_object comment="/var/log/audit files" id="oval:ssg-object_var_log_audit_files:obj:1" version="1">
    <unix:behaviors max_depth="-1" recurse="directories" recurse_direction="down" recurse_file_system="local"/>
    <unix:path operation="equals">/var/log/audit</unix:path>
    <unix:filename operation="pattern match">^.*$</unix:filename>
    <filter action="include">oval:ssg-state_not_mode_0600:ste:1</filter>
  </unix:file_object>
  <ind:textfilecontent54_test check="all" check_existence="none_exist" comment="log_group = root" id="oval:ssg-test_auditd_conf_log_group_not_root:tst:1" version="1">
    <ind:object object_ref="oval:ssg-object_auditd_conf_log_group_root:obj:1"/>
  </ind:textfilecontent54_test>
  <unix:file_object comment="/var/log/audit files" id="oval:ssg-object_var_log_audit_files-non_root:obj:1" version="1">
    <unix:behaviors max_depth="-1" recurse="directories" recurse_direction="down" recurse_file_system="local"/>
    <unix:path operation="equals">/var/log/audit</unix:path>
    <unix:filename operation="pattern match">^.*$</unix:filename>
    <filter action="include">oval:ssg-state_not_mode_0640:ste:1</filter>
  </unix:file_object>
  <unix:file_test check="all" check_existence="at_least_one_exists" comment="/var/log/audit files mode 0600" id="oval:ssg-test_file_permissions_var_log_audit:tst:1" version="1">
    <unix:object object_ref="oval:ssg-object_var_log_audit_files:obj:1"/>
    <unix:state state_ref="oval:ssg-state_not_mode_0600:ste:1"/>
  </unix:file_test>
  <ind:textfilecontent54_object comment="log_group = root" id="oval:ssg-object_auditd_conf_log_group_root:obj:1" version="1">
    <ind:filepath operation="equals">/etc/audit/auditd.conf</ind:filepath>
    <ind:pattern operation="pattern match">^[ ]*log_group[ ]+=[ ]+root[ ]*$</ind:pattern>
    <ind:instance datatype="int">1</ind:instance>
  </ind:textfilecontent54_object>
  <unix:file_test check="all" check_existence="at_least_one_exists" comment="/var/log/audit files mode 0640" id="oval:ssg-test_file_permissions_var_log_audit-non_root:tst:1" version="1">
    <unix:object object_ref="oval:ssg-object_var_log_audit_files-non_root:obj:1"/>
    <unix:state state_ref="oval:ssg-state_not_mode_0640:ste:1"/>
  </unix:file_test>
  <unix:file_state id="oval:ssg-state_not_mode_0640:ste:1" operator="OR" version="1">
    <unix:suid datatype="boolean">true</unix:suid>
    <unix:sgid datatype="boolean">true</unix:sgid>
    <unix:sticky datatype="boolean">true</unix:sticky>
    <unix:uexec datatype="boolean">true</unix:uexec>
    <unix:gwrite datatype="boolean">true</unix:gwrite>
    <unix:gexec datatype="boolean">true</unix:gexec>
    <unix:oread datatype="boolean">true</unix:oread>
    <unix:owrite datatype="boolean">true</unix:owrite>
    <unix:oexec datatype="boolean">true</unix:oexec>
  </unix:file_state>
  <definition class="compliance" id="oval:ssg-auditd_conf_log_group_not_root:def:1" version="1">
    <metadata>
      <title>'log_group' Not Set To 'root' In /etc/audit/auditd.conf</title>
      <affected family="unix">
        <platform>Red Hat Enterprise Linux 8</platform>
      </affected>
      <description>Verify 'log_group' is not set to 'root' in
      /etc/audit/auditd.conf.</description>
      <reference ref_id="auditd_conf_log_group_not_root" source="ssg"/>
    </metadata>
    <criteria>
      <criterion comment="Verify 'log_group' not set to 'root' in /etc/audit/auditd.conf" test_ref="oval:ssg-test_auditd_conf_log_group_not_root:tst:1"/>
    </criteria>
  </definition>
</def-group>